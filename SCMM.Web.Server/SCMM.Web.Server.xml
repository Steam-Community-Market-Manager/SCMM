<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SCMM.Web.Server</name>
    </assembly>
    <members>
        <member name="M:SCMM.Web.Server.API.Controllers.AppController.Get(System.Boolean)">
            <summary>
            List all supported apps
            </summary>
            <remarks>Response is cached for 24hrs</remarks>
            <returns>List of supported apps</returns>
            <response code="200">If <paramref name="detailed"/> is <code>true</code>, the response will be a list of <see cref="T:SCMM.Web.Data.Models.UI.App.AppDetailedDTO"/>. If <code>false</code>, the response will be a list of <see cref="T:SCMM.Web.Data.Models.UI.App.AppListDTO"/>.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.CurrencyController.Get(System.Boolean)">
            <summary>
            List all supported currencies
            </summary>
            <remarks>Response is cached for 1hr</remarks>
            <returns>List of supported currencies</returns>
            <response code="200">If <paramref name="detailed"/> is <code>true</code>, the response will be a list of <see cref="T:SCMM.Web.Data.Models.UI.Currency.CurrencyDetailedDTO"/>. If <code>false</code>, the response will be a list of <see cref="T:SCMM.Web.Data.Models.UI.Currency.CurrencyListDTO"/>.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ImageController.GetImage(System.Guid)">
            <summary>
            Get a cached image (DEPRECATED)
            </summary>
            <param name="id">Image GUID</param>
            <remarks>Range requests are supported.</remarks>
            <returns>Image data</returns>
            <response code="410"></response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ItemController.GetItems(System.Nullable{System.UInt64}[],System.String,System.Boolean,System.String,System.String,System.Nullable{System.UInt64},System.String,System.String[],System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Int32,System.Int32,System.String,SCMM.Web.Data.Models.SortDirection,System.Boolean)">
            <summary>
            Search for items
            </summary>
            <remarks>
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <param name="id">Optional array of ids to be included in the list. Helpful when you want search for items and compare against a known (but unrelated) item</param>
            <param name="filter">Optional search filter. Matches against item GUID, ID64, name, description, author, type, collection, and tags</param>
            <param name="exactMatch">If true, only items that exactly match <code>filter</code> are returned. If false, partial matches are returned</param>
            <param name="type">If specified, only items matching the supplied item type are returned</param>
            <param name="collection">If specified, only items matching the supplied item collection are returned</param>
            <param name="creatorId">If specified, only items published by the supplied creator id are returned</param>
            <param name="breaksIntoComponent">If specified, only items that break in to this component are returned</param>
            <param name="tag">If specified, only items that contain ALL of the supplied tags are returned</param>
            <param name="glow">If <code>true</code>, only items tagged with 'glow' are returned</param>
            <param name="glowsight">If <code>true</code>, only items tagged with 'glowsight' are returned</param>
            <param name="cutout">If <code>true</code>, only items tagged with 'cutout' are returned</param>
            <param name="commodity">If <code>true</code>, only commodity items are returned</param>
            <param name="marketable">If <code>true</code>, only marketable items are returned</param>
            <param name="tradable">If <code>true</code>, only tradable items are returned</param>
            <param name="returning">If <code>true</code>, only items that have been released over multiple stores are returned</param>
            <param name="banned">If <code>true</code>, only banned items are returned</param>
            <param name="publisherDrop">If <code>true</code>, only game publisher drops are returned</param>
            <param name="twitchDrop">If <code>true</code>, only twitch drops are returned</param>
            <param name="lootCrateDrop">If <code>true</code>, only items which can drop from loot crates are returned</param>
            <param name="craftable">If <code>true</code>, only craftable items are returned</param>
            <param name="manipulated">If <code>true</code>, only items currently flagged as undergoing price manipulation are returned</param>
            <param name="start">Return items starting at this specific index (pagination)</param>
            <param name="count">Number items to be returned (can be less if not enough data). Max 5000</param>
            <param name="sortBy">Sort item property name from <see cref="T:SCMM.Web.Data.Models.UI.Item.ItemDetailedDTO"/></param>
            <param name="sortDirection">Sort item direction</param>
            <param name="detailed">If <code>true</code>, the response will be a paginated list of <see cref="T:SCMM.Web.Data.Models.UI.Item.ItemDetailedDTO"/>. If <code>false</code>, the response will be a paginated list of <see cref="T:SCMM.Web.Data.Models.UI.Item.ItemDescriptionWithPriceDTO"/></param>
            <response code="200">Paginated list of items matching the request parameters.</response>
            <response code="400">If the request data is malformed/invalid.</response>
            <response code="404">If no items match the request parameters.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ItemController.GetItem(System.String)">
            <summary>
            Get item information
            </summary>
            <remarks>
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <param name="id">Item GUID, ID64, or name</param>
            <response code="200">The item details.</response>
            <response code="400">If the request data is malformed/invalid.</response>
            <response code="404">If the request item cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ItemController.GetItemSellOrders(System.String,System.Int32,System.Int32)">
            <summary>
            List item sell orders
            </summary>
            <param name="id">Item GUID, ID64, or name</param>
            <param name="start">Return item sell orders starting at this specific index (pagination)</param>
            <param name="count">Number items to be returned (can be less if not enough data). Max 100.</param>
            <response code="200">Paginated list of items matching the request parameters.</response>
            <response code="400">If the request data is malformed/invalid.</response>
            <response code="404">If the request item cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ItemController.GetItemBuyOrders(System.String,System.Int32,System.Int32)">
            <summary>
            List item buy orders
            </summary>
            <param name="id">Item GUID, ID64, or name</param>
            <param name="start">Return item buy orders starting at this specific index (pagination)</param>
            <param name="count">Number items to be returned (can be less if not enough data). Max 100.</param>
            <response code="200">Paginated list of items matching the request parameters.</response>
            <response code="400">If the request data is malformed/invalid.</response>
            <response code="404">If the request item cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ItemController.GetItemSales(System.String,System.Int32)">
            <summary>
            Get item sales history chart data, grouped by day (UTC)
            </summary>
            <remarks>
            Detailed financial details (high/low/open/close) are only reported for periods less than 30 days.
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <param name="id">Item GUID, ID64, or name</param>
            <param name="maxDays">The maximum number of days worth of sales history to return. Use <code>-1</code> for all sales history</param>
            <response code="200">List of item sales per day grouped/keyed by UTC date.</response>
            <response code="400">If the request data is malformed/invalid.</response>
            <response code="404">If the request item cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ItemController.GetItemTopHolders(System.String,System.Int32)">
            <summary>
            Get list of top users holding an item
            </summary>
            <param name="id">Item GUID, ID64, or name</param>
            <param name="max">The maximum number of users to return.</param>
            <response code="200">List of top user holding the item.</response>
            <response code="400">If the request data is malformed/invalid.</response>
            <response code="404">If the request item cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ItemController.GetItemDemandByItemType(System.String)">
            <summary>
            Get demand statistics for all items of the specified type
            </summary>
            <param name="type">The item type</param>=
            <returns>The demand statistics for the item type</returns>
            <remarks>
            Response is cached for 12hrs.
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <response code="200">The demand statistics for the item type.</response>
            <response code="400">If the item type is missing.</response>
            <response code="404">If the item type doesn't exist (or doesn't contain any marketable items).</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ItemController.GetItemsByCollection(System.String,System.Nullable{System.UInt64})">
            <summary>
            Get all items that belong to the specified collection
            </summary>
            <param name="name">The name of the item collection</param>
            <param name="creatorId">Optional creator id to filter against. Useful when there are multiple collections of the same name by different creators</param>
            <returns>The items belonging to the collection</returns>
            <remarks>
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <response code="200">The item collection details.</response>
            <response code="400">If the collection name is missing.</response>
            <response code="404">If the collection name doesn't exist (or doesn't contain any marketable items).</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ItemController.GetItemDefinitionArchives">
            <summary>
            List all known item definition archives
            </summary>
            <returns>List of item definition archives</returns>
            <response code="200">List of known item definition archives.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ItemController.GetItemDefinitionArchive(System.String,System.Boolean)">
            <summary>
            Get item definition archive contents
            </summary>
            <param name="digest">The digest of the item definition archive to get</param>
            <param name="raw">If true, the raw archive content is returned as a string. If false, the archive is returned as a list of  <see cref="T:SCMM.Steam.Data.Models.WebApi.Models.ItemDefinition"/> </param>
            <returns>The item definition archive contents</returns>
            <response code="200">The item definition archive contents.</response>
            <response code="404">If the item definition archive doesn't exist.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ItemController.GetItemFilters">
            <summary>
            List all known item filters
            </summary>
            <remarks>Response is cached for 24hrs</remarks>
            <response code="200">List of unique item filters</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ItemController.GetItemTypes">
            <summary>
            List all known item types
            </summary>
            <remarks>Response is cached for 24hrs</remarks>
            <response code="200">List of unique item types</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ItemController.GetItemPrices(SCMM.Steam.Data.Models.Enums.MarketType[])">
            <summary>
            List the price(s) of all items
            </summary>
            <remarks>
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <param name="markets">If specified, only item prices from these markets will be returned.</param>
            <response code="200">If <paramref name="markets"/> is <code>non-null</code>, the response will be a list of <see cref="T:SCMM.Web.Data.Models.UI.Item.ItemMarketPricesDTO"/>. If <code>null</code>, the response will be a list of <see cref="T:SCMM.Web.Data.Models.UI.Item.ItemBestMarketPriceDTO"/></response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.LanguageController.Get(System.Boolean)">
            <summary>
            List all supported languages
            </summary>
            <remarks>Response is cached for 24hrs</remarks>
            <returns>List of supported languages</returns>
            <response code="200">If <paramref name="detailed"/> is <code>true</code>, the response will be a list of <see cref="T:SCMM.Web.Data.Models.UI.Language.LanguageDetailedDTO"/>. If <code>false</code>, the response will be a list of <see cref="T:SCMM.Web.Data.Models.UI.Language.LanguageListDTO"/>.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ProfileController.GetMyProfile">
            <summary>
            Get your profile information
            </summary>
            <remarks>
            The language used for text localisation can be changed by defining the <code>Language</code> header and setting it to a supported language identifier (e.g. 'english').
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <response code="200">If the session is authentication, your Steam profile information is returned. If the session is unauthenticated, a generic guest profile is returned.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ProfileController.SetMyProfile(SCMM.Web.Data.Models.UI.Profile.UpdateProfileCommand)">
            <summary>
            Update your profile information
            </summary>
            <remarks>This API requires authentication</remarks>
            <param name="command">
            Information to be updated to your profile. 
            Any fields that are <code>null</code> are ignored (not updated).
            </param>
            <response code="200">If the profile was updated successfully.</response>
            <response code="400">If the request data is malformed/invalid.</response>
            <response code="401">If the request is unauthenticated (login first).</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ProfileController.GetMyProfileData">
            <summary>
            Download a copy of all data related to your profile
            </summary>
            <remarks>This API requires authentication</remarks>
            <response code="200">Steam profile data.</response>
            <response code="400">If profile cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ProfileController.DeleteMyProfileData">
            <summary>
            Delete all data related to your profile
            </summary>
            <remarks>This API requires authentication</remarks>
            <response code="200">If the deletion was successful.</response>
            <response code="400">If the profile cannot be deleted.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ProfileController.GetProfileSummary(System.String)">
            <summary>
            Get profile information
            </summary>
            <param name="id">Valid Steam ID64, Custom URL, or Profile URL</param>
            <response code="200">Steam profile information.</response>
            <response code="400">If the request data is malformed/invalid.</response>
            <response code="404">If the profile cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ProfileController.PostInventorySync(System.String,System.Boolean)">
            <summary>
            Synchronise Steam profile inventory
            </summary>
            <param name="id">Valid Steam ID64, Custom URL, or Profile URL</param>
            <param name="force">If true, the inventory will always be fetched from Steam. If false, sync calls to Steam are cached for one hour</param>
            <response code="200">If the inventory was successfully synchronised.</response>
            <response code="400">If the request data is malformed/invalid.</response>
            <response code="401">If the profile inventory is private.</response>
            <response code="404">If the profile cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ProfileController.GetInventoryValue(System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get Steam profile inventory and calculate the market value
            </summary>
            <remarks>
            Investment totals are only returned if you are authorised to view the specified steam account. 
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            Inventory mosaic images automatically expire after 7 days; After which, the URL will return a 404 response.
            </remarks>
            <param name="id">Valid Steam ID64, Custom URL, or Profile URL</param>
            <param name="generateInventoryMosaic">If true, a mosaic image of the highest valued items will be generated in the response. If false, the mosaic will be <code>null</code>.</param>
            <param name="mosaicTileSize">The size (in pixel) to render each item within the mosaic image (if enabled) (range: 32-128)</param>
            <param name="mosaicColumns">The number of item columns to render within the mosaic image (if enabled) (range: 1-10)</param>
            <param name="mosaicRows">The number of item rows to render within the mosaic image (if enabled) (range: 1-10)</param>
            <param name="force">If true, the inventory will always be fetched from Steam. If false, calls to Steam are cached for one hour</param>
            <response code="200">Profile inventory value.</response>
            <response code="400">If the request data is malformed/invalid.</response>
            <response code="401">If the profile inventory is private/empty.</response>
            <response code="404">If the profile cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ProfileController.GetInventoryTotal(System.String)">
            <summary>
            Get profile inventory item totals
            </summary>
            <remarks>
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <param name="id">Valid Steam ID64, Custom URL, or Profile URL</param>
            <response code="200">Profile inventory item totals.</response>
            <response code="400">If the request data is malformed/invalid.</response>
            <response code="404">If the profile cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ProfileController.GetInventoryItems(System.String)">
            <summary>
            Get profile inventory item information
            </summary>
            <remarks>
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <param name="id">Valid Steam ID64, Custom URL, or Profile URL</param>
            <response code="200">Profile inventory item information.</response>
            <response code="400">If the request data is malformed/invalid.</response>
            <response code="404">If the profile cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ProfileController.GetInventoryCollections(System.String)">
            <summary>
            Get profile inventory item collection information
            </summary>
            <remarks>
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <param name="id">Valid Steam ID64, Custom URL, or Profile URL</param>
            <response code="200">Profile inventory item collection information.</response>
            <response code="400">If the request data is malformed/invalid.</response>
            <response code="404">If the profile cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ProfileController.GetInventoryMovement(System.String)">
            <summary>
            Get profile inventory market movement
            </summary>
            <remarks>
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <param name="id">Valid Steam ID64, Custom URL, or Profile URL</param>
            <response code="200">Profile inventory market movement information.</response>
            <response code="400">If the request data is malformed/invalid.</response>
            <response code="404">If the profile cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ProfileController.GetInventoryInvestment(System.String,System.String,System.Int32,System.Int32,System.String,SCMM.Web.Data.Models.SortDirection)">
            <summary>
            Get profile inventory investment information
            </summary>
            <remarks>
            This API requires authentication.
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <param name="id">Valid Steam ID64, Custom URL, or Profile URL</param>
            <param name="filter">Optional search filter. Matches against item name or description</param>
            <param name="start">Return items starting at this specific index (pagination)</param>
            <param name="count">Number items to be returned (can be less if not enough data). Max 100.</param>
            <param name="sortBy">Sort item property name from <see cref="T:SCMM.Web.Data.Models.UI.Profile.Inventory.ProfileInventoryInvestmentItemDTO"/></param>
            <param name="sortDirection">Sort item direction</param>
            <response code="200">Profile inventory investment information.</response>
            <response code="400">If the request data is malformed/invalid.</response>
            <response code="401">If the request is unauthenticated (login first) or the requested inventory does not belong to the authenticated user.</response>
            <response code="404">If the profile cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ProfileController.SetInventoryItem(System.String,System.UInt64,SCMM.Web.Data.Models.UI.Profile.Inventory.UpdateInventoryItemCommand)">
            <summary>
            Update profile inventory item information
            </summary>
            <remarks>This API requires authentication</remarks>
            <param name="profileId">Valid Steam ID64, Custom URL, or Profile URL</param>
            <param name="itemId">
            Inventory item identifier (Steam ID64) to be updated. 
            The item must belong to your (currently authenticated) profile or the request will fail
            </param>
            <param name="command">
            Information to be updated for the item. 
            Any fields that are <code>null</code> are ignored (not updated).
            </param>
            <response code="200">If the inventory item was updated successfully.</response>
            <response code="400">If the request data is malformed/invalid.</response>
            <response code="401">If the request is unauthenticated (login first) or the requested inventory item does not belong to the authenticated user.</response>
            <response code="404">If the inventory item cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ProfileController.CombineInventoryItemStacks(System.String,System.String,System.Boolean)">
            <summary>
            Combine all inventory items together in to the smallest possible stack
            </summary>
            <remarks>This API requires authentication and a Steam Web API key to use</remarks>
            <param name="profileId">Valid Steam ID64, Custom URL, or Profile URL</param>
            <param name="apiKey">
            Valid Steam Web API key with permission to modify the source and destination items.
            You can obtain your Steam API key from: https://steamcommunity.com/dev/apikey.
            Read https://scmm.app/privacy for more about how your Steam API key is handled.
            </param>
            <param name="stackUntradableAndUnmarketable">
            If true, untradeable and unmarketable items will be stacked too, which may cause trade/market restrictions to be applied to the resulting stack.
            </param>
            <response code="200">If the inventory items were combined successfully.</response>
            <response code="400">If the request data is malformed/invalid.</response>
            <response code="401">If the request is unauthenticated (login first), Steam API key is invalid, or the requested inventory items do not belong to the authenticated user.</response>
            <response code="404">If the inventory items cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ProfileController.CombineInventoryItemStacks(System.String,System.String,System.UInt64,System.Collections.Generic.IDictionary{System.UInt64,System.UInt32})">
            <summary>
            Combine multiple inventory item stacks together
            </summary>
            <remarks>This API requires authentication and a Steam Web API key to use</remarks>
            <param name="profileId">Valid Steam ID64, Custom URL, or Profile URL</param>
            <param name="itemId">
            The destination item id that will receive all source items. 
            The item must belong to your (currently authenticated) profile or the request will fail
            </param>
            <param name="sourceItems">
            A dictionary of item ids (keys) and their quantities (values) that will be combined in to the destination item
            </param>
            <param name="apiKey">
            Valid Steam Web API key with permission to modify the source and destination items.
            You can obtain your Steam API key from: https://steamcommunity.com/dev/apikey.
            Read https://scmm.app/privacy for more about how your Steam API key is handled.
            </param>
            <response code="200">If the inventory items were combined successfully.</response>
            <response code="400">If the request data is malformed/invalid.</response>
            <response code="401">If the request is unauthenticated (login first), Steam API key is invalid, or the requested inventory items do not belong to the authenticated user.</response>
            <response code="404">If the inventory items cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.ProfileController.SplitInventoryItemStacks(System.String,System.String,System.UInt64,System.UInt32,System.Boolean)">
            <summary>
            Split inventory item in to multiple stacks
            </summary>
            <remarks>This API requires authentication and a Steam Web API key to use</remarks>
            <param name="profileId">Valid Steam ID64, Custom URL, or Profile URL</param>
            <param name="itemId">
            The item id to be split. The item must have a quantity of two or more. 
            The item must belong to your (currently authenticated) profile or the request will fail
            </param>
            <param name="quantity">
            The number of items to split out in to a new stack
            </param>
            <param name="stackNewItems">
            If true, new items will be stacked as efficently as possible. If false, items will be created unstack (i.e. as single items)
            </param>
            <param name="apiKey">
            Valid Steam Web API key with permission to modify the source and destination items.
            You can obtain your Steam API key from: https://steamcommunity.com/dev/apikey.
            Read https://scmm.app/privacy for more about how your Steam API key is handled.
            </param>
            <response code="200">If the inventory items were split successfully, response contains a list of the new item stacks and quantities.</response>
            <response code="400">If the request data is malformed/invalid.</response>
            <response code="401">If the request is unauthenticated (login first), Steam API key is invalid, or the requested inventory item does not belong to the authenticated user.</response>
            <response code="404">If the inventory items cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.SearchController.Get(System.String)">
            <summary>
            Search the databases for matching objects
            </summary>
            <remarks>Searches items and collections</remarks>
            <param name="query">The search query</param>
            <returns></returns>
            <response code="200">The top 10 results that match the search query</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetMarketTotals">
            <summary>
            Get marketplace totals
            </summary>
            <remarks>
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            Response is cached for 1hr.
            </remarks>
            <response code="200">Marketplace totals for the current app.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetMarketIndexFund(System.Int32)">
            <summary>
            Get marketplace index fund chart data, grouped by day (UTC)
            </summary>
            <remarks>
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <param name="maxDays">The maximum number of days worth of market history to return. Use <code>-1</code> for all history</param>
            <response code="200">List of market index fund values grouped/keyed per day by UTC date.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetMarketCheapestListings(System.String,System.Nullable{SCMM.Steam.Data.Models.Enums.MarketType},System.Nullable{System.Decimal},System.Int32,System.Int32)">
            <summary>
            Get the cheapeast market listing for items
            </summary>
            <remarks>
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <param name="filter">Optional search filter. Matches against item name, type, or collection</param>
            <param name="market">Optional market type filter. If specified, only items from this market will be returned</param>
            <param name="minimumInvestmentReliability"></param>
            <param name="start">Return items starting at this specific index (pagination)</param>
            <param name="count">Number items to be returned (can be less if not enough data). Max 100.</param>
            <response code="200">Paginated list of items matching the request parameters.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetMarketFlips(System.String,System.Nullable{SCMM.Steam.Data.Models.Enums.MarketType},System.Nullable{System.Decimal},System.Boolean,System.Int32,System.Int32)">
            <summary>
            Get items that can be instantly flipped on to the Steam Community Market for profit
            </summary>
            <remarks>
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <param name="filter">Optional search filter. Matches against item name, type, or collection</param>
            <param name="market">Optional market type filter. If specified, only items from this market will be returned</param>
            <param name="minimumInvestmentReliability"></param>
            <param name="sellNow">If true, sell prices are based on highest buy order. If false, sell prices are based on lowest sell order. Default is true.</param>
            <param name="start">Return items starting at this specific index (pagination)</param>
            <param name="count">Number items to be returned (can be less if not enough data). Max 100.</param>
            <response code="200">Paginated list of items matching the request parameters.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetCraftingCheapestComponentCosts(System.Int32,System.Int32)">
            <summary>
            Get the cheapest method of acquiring crafting components, sorted by lowest cost
            </summary>
            <param name="start">Return items starting at this specific index (pagination)</param>
            <param name="count">Number items to be returned (can be less if not enough data). Max 100.</param>
            <response code="200">Paginated list of items matching the request parameters.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetMarketCheapestCraftableContainerCosts(System.Int32,System.Int32)">
            <summary>
            Get the cheapest method of acquiring craftable item containers, sorted by lowest cost
            </summary>
            <param name="start">Return items starting at this specific index (pagination)</param>
            <param name="count">Number items to be returned (can be less if not enough data). Max 100.</param>
            <response code="200">Paginated list of items matching the request parameters.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetMarketActivity(System.Nullable{SCMM.Steam.Data.Models.Enums.SteamMarketItemActivityType},System.String,System.String,System.Int32,System.Int32)">
            
            <summary>
            Get marketplace listing activity from the last 24hrs
            </summary>
            <param name="type">Optional filter, matches against the activity event type</param>
            <param name="user">Optional filter, matches against the buyer name or seller name</param>
            <param name="item">Optional filter, matches against the item name</param>
            <param name="start">Return activity starting at this specific index (pagination)</param>
            <param name="count">Number activity to be returned (can be less if not enough data). Max 100.</param>
            <response code="200">Paginated list of activity matching the request parameters.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetStoreItemTopSellersTimeline(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Get store item top seller changes timeline
            </summary>
            <param name="start">Starting from date</param>
            <param name="end">Ending at date</param>
            <response code="200">The store item top seller changes timeline.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetItemsTypeDistribution(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get distribution of item types from accepted items and workshop submissions
            </summary>
            <param name="fromYear">If specified, only items created on or after this year will be counted</param>
            <param name="toYear">If specified, only items created on or before this year will be counted</param>
            <response code="200">List of market index fund values grouped/keyed per day by UTC date.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetItemsMostDemanded(System.Int32,System.Int32)">
            <summary>
            List items, sorted by highest number of sales in the last 24hrs
            </summary>
            <param name="start">Return items starting at this specific index (pagination)</param>
            <param name="count">Number items to be returned (can be less if not enough data). Max 100.</param>
            <response code="200">Paginated list of items matching the request parameters.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetItemsMostSaturated(System.Int32,System.Int32)">
            <summary>
            List items, sorted by highest supply
            </summary>
            <param name="start">Return items starting at this specific index (pagination)</param>
            <param name="count">Number items to be returned (can be less if not enough data). Max 100</param>
            <response code="200">Paginated list of items matching the request parameters.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetItemsAllTimeHigh(System.Int32,System.Int32)">
            <summary>
            List items currently at their all-time highest value, sorted by highest value
            </summary>
            <remarks>
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <param name="start">Return items starting at this specific index (pagination)</param>
            <param name="count">Number items to be returned (can be less if not enough data). Max 100.</param>
            <response code="200">Paginated list of items matching the request parameters.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetItemsAllTimeLow(System.Int32,System.Int32)">
            <summary>
            List items current at their all-time lowest value, sorted by lowest value
            </summary>
            <remarks>
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <param name="start">Return items starting at this specific index (pagination)</param>
            <param name="count">Number items to be returned (can be less if not enough data). Max 100.</param>
            <response code="200">Paginated list of items matching the request parameters.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetItemsMostExpensive(System.Int32,System.Int32)">
            <summary>
            List items, sorted by highest value
            </summary>
            <remarks>
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <param name="start">Return items starting at this specific index (pagination)</param>
            <param name="count">Number items to be returned (can be less if not enough data). Max 100.</param>
            <response code="200">Paginated list of items matching the request parameters.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetItemsMostSupply(System.Int32,System.Int32)">
            <summary>
            List items, sorted by highest estimated total supply
            </summary>
            <param name="start">Return items starting at this specific index (pagination)</param>
            <param name="count">Number items to be returned (can be less if not enough data). Max 100.</param>
            <response code="200">Paginated list of items matching the request parameters.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetItemsLargestCollections(System.Int32,System.Int32)">
            <summary>
            List items, grouped by collection name, sorted by highest item count
            </summary>
            <param name="start">Return items starting at this specific index (pagination)</param>
            <param name="count">Number items to be returned (can be less if not enough data). Max 100.</param>
            <response code="200">Paginated list of items matching the request parameters.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetProfilesLargestCreators(System.Int32,System.Int32)">
            <summary>
            List profiles with accepted workshop items, sorted by highest number of items
            </summary>
            <param name="start">Return items starting at this specific index (pagination)</param>
            <param name="count">Number items to be returned (can be less if not enough data). Max 100.</param>
            <response code="200">Paginated list of profiles matching the request parameters.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetProfileInventoriesTotal">
            <summary>
            Get profile inventory total statistics
            </summary>
            <remarks>
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            Response is cached for 1hr.
            </remarks>
            <response code="200">The totals across all profile inventories.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetProfilesInventoriesMyLeaderboardRank">
            <summary>
            Get your profile inventory rank
            </summary>
            <remarks>This API requires authentication</remarks>
            <response code="200">The rank of your inventory.</response>
            <response code="401">If the request is unauthenticated (login first).</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetProfilesInventoriesByHighestValue(System.Int32,System.Int32)">
            <summary>
            List profiles inventory values, sorted by highest value first
            </summary>
            <param name="start">Return items starting at this specific index (pagination)</param>
            <param name="count">Number items to be returned (can be less if not enough data). Max 100.</param>
            <response code="200">Paginated list of profiles matching the request parameters.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetProfilesInventoriesByMostRecentlyValued(System.Int32,System.Int32)">
            <summary>
            List profiles inventory values, sorted by most recently updated first
            </summary>
            <param name="start">Return items starting at this specific index (pagination)</param>
            <param name="count">Number items to be returned (can be less if not enough data)</param>
            <response code="200">Paginated list of profiles matching the request parameters. Max 100.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetProfilesDonators">
            <summary>
            List profiles who have the donator role, sorted by highest contribution
            </summary>
            <remarks>Response is cached for 1hr</remarks>
            <returns>The list of profiles who have donated</returns>
            <response code="200">The list of profiles who have donated.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StatisticsController.GetProfilesContributors">
            <summary>
            List profiles who have the contributor role
            </summary>
            <remarks>Response is cached for 1hr</remarks>
            <returns>The list of profiles who have contributed</returns>
            <response code="200">The list of profiles who have contributed.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StoreController.GetStores">
            <summary>
            List all known item store instances
            </summary>
            <returns>List of stores</returns>
            <response code="200">List of known item stores. Use <see cref="M:SCMM.Web.Server.API.Controllers.StoreController.GetStore(System.String)"/> <code>/store/{dateTime}</code> to get the details of a specific store.</response>
            <response code="400">If the current app does not support stores.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StoreController.GetCurrentStore">
            <summary>
            Get the most recent item store information
            </summary>
            <remarks>
            There may be multiple active item stores, only the most recent is returned.
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <returns>The most recent item store</returns>
            <response code="200">The most recent item store.</response>
            <response code="400">If the current app does not support stores.</response>
            <response code="404">If there are no currently active item stores.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StoreController.GetStore(System.String)">
            <summary>
            Get item store information at a specific date
            </summary>
            <param name="id">Store GUID, Name, or UTC start date time (formatted as <code>yyyy-MM-dd-HHmm</code>).</param>
            <returns>The item store details</returns>
            <remarks>
            If there are multiple active stores at the specified date time, only the most recent will be returned.
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <response code="200">The store details.</response>
            <response code="400">If the store date is invalid or cannot be parsed as a date time or the current app does not support stores.</response>
            <response code="404">If the store cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StoreController.GetStoreItemSalesStats(System.Guid)">
            <summary>
            Get store item sales chart data
            </summary>
            <param name="id">Store GUID to load item sales for.</param>
            <remarks>Item sales data is only available for items that have an associated workshop item.</remarks>
            <returns>The item sales chart data</returns>
            <response code="200">The item sales chart data.</response>
            <response code="400">If the store id is invalid or the current app does not support stores.</response>
            <response code="404">If the store cannot be found, or doesn't contain any workshop items.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StoreController.GetStoreItemRevenueStats(System.Guid)">
            <summary>
            Get store item revenue chart data
            </summary>
            <param name="id">Store GUID to load item revenue for.</param>
            <remarks>
            Item revenue data is only available for items that have an associated workshop item.
            The currency used to represent monetary values can be changed by defining <code>Currency</code> in the request headers or query string and setting it to a supported three letter ISO 4217 currency code (e.g. 'USD').
            </remarks>
            <returns>The item revenue chart data</returns>
            <response code="200">The item revenue chart data.</response>
            <response code="400">If the store id is invalid or the current app does not support stores.</response>
            <response code="404">If the store cannot be found, or doesn't contain any workshop items.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StoreController.LinkStoreItem(System.Guid,SCMM.Web.Data.Models.UI.Store.LinkStoreItemCommand)">
            <summary>
            Link an item to a store
            </summary>
            <remarks>This API requires authentication and the user must belong to the <code>Contributor</code> role</remarks>
            <param name="id">Store GUID to link the item to.</param>
            <param name="command">
            The item ID and store price (in USD) of the item to be linked to the store
            </param>
            <response code="200">If the item was linked successfully.</response>
            <response code="400">If the request data is malformed/invalid or the current app does not support stores.</response>
            <response code="401">If the request is unauthenticated (login first) or the authenticated user is not a moderator.</response>
            <response code="404">If the store or item cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StoreController.UnlinkStoreItem(System.Guid,SCMM.Web.Data.Models.UI.Store.UnlinkStoreItemCommand)">
            <summary>
            Unlink an item from a store
            </summary>
            <remarks>This API requires authentication and the user must belong to the <code>Contributor</code> role</remarks>
            <param name="id">Store GUID to unlink the item from.</param>
            <param name="command">
            The item ID and store price (in USD) of the item to be unlinked from the store
            </param>
            <response code="200">If the item was unlinked successfully.</response>
            <response code="400">If the request data is malformed/invalid or the current app does not support stores.</response>
            <response code="401">If the request is unauthenticated (login first) or the authenticated user is not a moderator.</response>
            <response code="404">If the store or item cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.StoreController.GetStoreNextUpdateTime">
            <summary>
            Get the next (estimated) item store release date time
            </summary>
            <remarks>This is an estimate only and the exact time varies from week to week. Sometimes the store can even be late by a day or two.</remarks>
            <returns>The expected store release date/time</returns>
            <response code="200">The expected date/time of the next item store release.</response>
            <response code="400">If the current app does not support store rotations.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.SystemController.GetSystemStatus(System.Nullable{System.UInt64},System.Boolean,System.Boolean)">
            <summary>
            Get system status
            </summary>
            <remarks>Response is cached for 3mins</remarks>
            <param name="appId">The app to check the status of</param>
            <param name="includeAppMarkets">If true, status details for item markets will be included</param>
            <param name="includeWebProxiesStatus">If true, status details for web proxies will be included</param>
            <returns>The system status for the requested app</returns>
            <response code="200">The system status for the requested app.</response>
            <response code="404">If the system status is not currently available.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.SystemController.GetLatestSystemUpdateMessages">
            <summary>
            Get most recent system update messages
            </summary>
            <remarks>Response is cached for 1hr</remarks>
            <returns>The most recent system update messages</returns>
            <response code="200">The most recent system update messages</response>
            <response code="404">If the request app cannot be found.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.API.Controllers.WorkshopController.GetItems(System.String[],System.String,System.String,System.String,System.Nullable{System.UInt64},System.Int32,System.Int32,System.String,SCMM.Web.Data.Models.SortDirection)">
            <summary>
            Search for workshop file submissions
            </summary>
            <param name="id">Optional array of ids to be included in the list. Helpful when you want search for items and compare against a known (but unrelated) item</param>
            <param name="filter">Optional search filter. Matches against item GUID, ID64, name, description, author, type, collection, and tags</param>
            <param name="type">If specified, only items matching the supplied item type are returned</param>
            <param name="collection">If specified, only items matching the supplied item collection are returned</param>
            <param name="creatorId">If specified, only items published by the supplied creator id are returned</param>
            <param name="start">Return items starting at this specific index (pagination)</param>
            <param name="count">Number items to be returned (can be less if not enough data). Max 5000.</param>
            <param name="sortBy">Sort item property name from <see cref="T:SCMM.Web.Data.Models.UI.Item.ItemDetailedDTO"/></param>
            <param name="sortDirection">Sort item direction</param>
            <response code="200">Paginated list of workshop files matching the request parameters.</response>
            <response code="400">If the request data is malformed/invalid.</response>
            <response code="404">If no items match the request parameters.</response>
            <response code="500">If the server encountered a technical issue completing the request.</response>
        </member>
        <member name="M:SCMM.Web.Server.Controllers.AuthenticationController.SignIn(System.String)">
            <summary>
            Sign-in via Steam OpenId
            </summary>
            <remarks>Redirect client browser to this endpoint, not a Web API</remarks>
            <param name="returnUrl">Where to redirect the client after signing in</param>
            <returns>A redirection to Steam's OpenId</returns>
        </member>
        <member name="M:SCMM.Web.Server.Controllers.AuthenticationController.SignOut(System.String)">
            <summary>
            Sign-out
            </summary>
            <remarks>Redirect client browser to this endpoint, not a Web API</remarks>
            <param name="returnUrl">Where to redirect the client after signing out</param>
            <returns>A redirection to <paramref name="returnUrl"/></returns>
        </member>
    </members>
</doc>
