@inject ILogger<AppBarRuntimeControls> Logger
@inject NavigationManager NavigationManager
@inject AppState State

<div @attributes="AdditionalAttributes">
    <MudMenu ActivationEvent="@MouseEvent.LeftClick" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter" Dense="true" MaxHeight="500" Disabled="State.IsPrerendering" title="Change the user interface rendering mode">
        <ActivatorContent>
            <MudIconButton Icon="@((State.Runtime == RuntimeType.Server) ? "fas fa-fw fa-bolt" : "fas fa-fw fa-frog")" Color="@((State.Runtime == RuntimeType.Server) ? Color.Secondary : Color.Secondary)" Disabled="State.IsPrerendering"></MudIconButton>
        </ActivatorContent>
        <ChildContent>
            <MudMenuItem OnClick="@(() => ChangeRuntime(RuntimeType.Server))" Disabled="@(State.Runtime == RuntimeType.Server)" Class="d-flex align-center">
                <MudText Typo="Typo.body2"  Class="d-flex align-center">
                    <i class="fas fa-fw fa-bolt" />
                    <span class="ml-2">Use server-side rendering <strong>(Faster, but less stable)</strong></span>
                </MudText>
            </MudMenuItem>
            <MudMenuItem OnClick="@(() => ChangeRuntime(RuntimeType.WebAssembly))" Disabled="@(State.Runtime == RuntimeType.WebAssembly)" Class="d-flex align-center">
                <MudText Typo="Typo.body2" Class="d-flex align-center">
                    <i class="fas fa-fw fa-frog" />
                    <span class="ml-2">Use client-side rendering <strong>(Slower, but more stable)</strong></span>
                </MudText>
            </MudMenuItem>
        </ChildContent>
    </MudMenu>
</div>

@code
{
    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> AdditionalAttributes { get; set; }
    
    private void ChangeRuntime(RuntimeType runtime)
    {
        Logger.LogInformation($"Runtime was changed to '{runtime}'");
        State.Runtime = runtime;

        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true, replace: true);
    }
}
